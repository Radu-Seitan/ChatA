// <auto-generated />
using ChatA.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatA.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210827103549_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChatA.Domain.Entities.GroupMembership", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("GroupMemberships");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("SenderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.MessageRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MessageRooms");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MessageRoom");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.GroupMessageRoom", b =>
                {
                    b.HasBaseType("ChatA.Domain.Entities.MessageRoom");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("GroupMessageRoom");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.IndividualMessageRoom", b =>
                {
                    b.HasBaseType("ChatA.Domain.Entities.MessageRoom");

                    b.Property<string>("FirstUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecondUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("FirstUserId");

                    b.HasIndex("SecondUserId");

                    b.HasDiscriminator().HasValue("IndividualMessageRoom");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.GroupMembership", b =>
                {
                    b.HasOne("ChatA.Domain.Entities.GroupMessageRoom", "Room")
                        .WithMany("Memberships")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatA.Domain.Entities.User", "User")
                        .WithMany("GroupMemberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.Message", b =>
                {
                    b.HasOne("ChatA.Domain.Entities.MessageRoom", "Room")
                        .WithMany("Messages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatA.Domain.Entities.User", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId");

                    b.Navigation("Room");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.IndividualMessageRoom", b =>
                {
                    b.HasOne("ChatA.Domain.Entities.User", "FirstUser")
                        .WithMany("FirstIndividualMessageRooms")
                        .HasForeignKey("FirstUserId");

                    b.HasOne("ChatA.Domain.Entities.User", "SecondUser")
                        .WithMany("SecondIndividualMessageRooms")
                        .HasForeignKey("SecondUserId");

                    b.Navigation("FirstUser");

                    b.Navigation("SecondUser");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.MessageRoom", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.User", b =>
                {
                    b.Navigation("FirstIndividualMessageRooms");

                    b.Navigation("GroupMemberships");

                    b.Navigation("Messages");

                    b.Navigation("SecondIndividualMessageRooms");
                });

            modelBuilder.Entity("ChatA.Domain.Entities.GroupMessageRoom", b =>
                {
                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
